# KubeZoo statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kubezoo
spec:
  serviceName: kubezoo
  replicas: 1
  selector:
    matchLabels:
      app: kubezoo
  template:
    metadata:
      labels:
        app: kubezoo
    spec:
      containers:
      - name: kubezoo
        image: kubezoo/kubezoo:v0.1.2
        imagePullPolicy: IfNotPresent
        command: 
        - kubezoo
        args:
        - --allow-privileged=true
        - --apiserver-count=1
        - --cors-allowed-origins=.*
        - --delete-collection-workers=1
        - --etcd-prefix=/zoo
        - --etcd-servers=http://kubezoo-etcd-0.kubezoo-etcd:2379
        - --event-ttl=1h0m0s
        - --logtostderr=true
        - --max-requests-inflight=1002
        - --service-cluster-ip-range=192.168.0.1/16
        - --service-node-port-range=20000-32767
        - --storage-backend=etcd3
        - --authorization-mode=AlwaysAllow
        - --client-ca-file=/etc/kubezoo/pki/ca.pem
        - --client-ca-key-file=/etc/kubezoo/pki/ca-key.pem
        - --tls-cert-file=/etc/kubezoo/pki/kubernetes.pem
        - --tls-private-key-file=/etc/kubezoo/pki/kubernetes-key.pem
        - --service-account-key-file=/etc/upstream/pki/sa.pub
        - --service-account-issuer=kubezoo
        - --service-account-signing-key-file=/etc/upstream/pki/sa.key
        - --proxy-client-cert-file=/etc/upstream/pki/client.crt
        - --proxy-client-key-file=/etc/upstream/pki/client-key.crt
        - --proxy-client-ca-file=/etc/upstream/pki/ca.crt
        - --request-timeout=10m
        - --watch-cache=true
        - --proxy-upstream-master=https://kubernetes
        - --service-account-lookup=false
        - --proxy-bind-address=127.0.0.1
        - --proxy-secure-port=6443
        - --api-audiences=kubezoo
        ports:
        - containerPort: 6443
          name: secure-port
        - containerPort: 8080
          name: insecure-port
        volumeMounts:
        - name: kubezoo-pki
          mountPath: /etc/kubezoo/pki
        - name: upstream-pki
          mountPath: /etc/upstream/pki
      volumes:
      - name: kubezoo-pki
        secret:
          secretName: kubezoo-pki
      - name: upstream-pki
        secret:
          secretName: upstream-pki
---
# KubeZoo service
apiVersion: v1
kind: Service
metadata:
  name: kubezoo
spec:
  type: ClusterIP
  selector:
    app: kubezoo
  ports:
  - name: secure-port
    port: 6443
    protocol: TCP
    targetPort: 6443
---
# KubeZoo Etcd StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: kubezoo-etcd
spec:
  serviceName: kubezoo-etcd
  replicas: 1
  selector:
    matchLabels: 
      app: kubezoo-etcd 
  template:
    metadata:
      labels:
        app: kubezoo-etcd
    spec:
      containers:
      - name: kubezoo-etcd
        image: kubezoo/etcd:v3.3.27
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - etcd
        args:
        - --listen-client-urls=http://0.0.0.0:2379
        - --advertise-client-urls=http://$(POD_NAME).kubezoo-etcd:2379
---
# KubeZoo Etcd service
apiVersion: v1
kind: Service
metadata:
  name: kubezoo-etcd
spec: 
  type: ClusterIP
  # make it headless service as it only need to be accessed by KubeZoo
  clusterIP: None
  selector: 
    app: kubezoo-etcd
